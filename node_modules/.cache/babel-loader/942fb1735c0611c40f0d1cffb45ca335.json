{"ast":null,"code":"var _jsxFileName = \"/Users/xiaoxiao/PycharmProjects/lab-web/src/LabContainer/Research/Research.js\";\nimport React, { useEffect } from \"react\";\nimport ScreenHeading from \"../../utilities/ScreenHeading/ScreenHeading\";\nimport ScrollService from \"../../utilities/ScrollService\";\nimport Animations from \"../../utilities/Animations\";\nimport \"./Research.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Research(props) {\n  let fadeInScreenHandler = screen => {\n    if (screen.fadeScreen !== props.id) return;\n    Animations.animations.fadeScreen(props.id);\n  };\n\n  const fadeInSubscription = ScrollService.currentScreenFadeIn.subscribe(fadeInScreenHandler);\n  const SCREEN_CONSTSANTS = [{\n    title: \"Federated Learning on Non-iid Features via Local Batch Normalization\",\n    description: \"Most of the previous federated learning work has focused on a difference in the distribution of labels. Unlike those settings, we address an important problem of FL, e.g., different scanner/sensors in medical imaging, where local clients may store examples with different marginal or conditional feature distributions compared to other nodes, which we denote as feature shift non-iid. In this work, we propose an effective method that uses local batch normalization to alleviate the feature shift before averaging models.\",\n    imgurl: require(\"../../assets/Research/fedbn.png\")\n  }, {\n    title: \"Transfer Pruning for Inversion Attack Defense\",\n    description: \"We propose to prune a target neural network with a public datasetand transfers it to the distributed learning setting to collaboratively train the pruned network with distributed private datasets via sharing a hidden layer of representations, without sharing the data. Our experiments show that the proposed approach achieves a much better trade-off between accuracy and privacy preservation.\",\n    imgurl: require(\"../../assets/Research/tranfer_prune.png\")\n  }];\n\n  const renderProjects = () => {\n    return SCREEN_CONSTSANTS.map((value, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"research-projects\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: value.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: value.imgurl,\n          alt: \"No Image\",\n          className: \"project-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-details\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: value.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"research-container screen-container\",\n    id: props.id || \"\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"research-parent\",\n      children: [/*#__PURE__*/_jsxDEV(ScreenHeading, {\n        title: \"Research\",\n        subHeading: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), renderProjects()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c = Research;\n\nvar _c;\n\n$RefreshReg$(_c, \"Research\");","map":{"version":3,"sources":["/Users/xiaoxiao/PycharmProjects/lab-web/src/LabContainer/Research/Research.js"],"names":["React","useEffect","ScreenHeading","ScrollService","Animations","Research","props","fadeInScreenHandler","screen","fadeScreen","id","animations","fadeInSubscription","currentScreenFadeIn","subscribe","SCREEN_CONSTSANTS","title","description","imgurl","require","renderProjects","map","value","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAO,gBAAP;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,MAAIC,mBAAmB,GAAIC,MAAD,IAAY;AACpC,QAAIA,MAAM,CAACC,UAAP,KAAsBH,KAAK,CAACI,EAAhC,EAAoC;AACpCN,IAAAA,UAAU,CAACO,UAAX,CAAsBF,UAAtB,CAAiCH,KAAK,CAACI,EAAvC;AACD,GAHD;;AAKA,QAAME,kBAAkB,GACtBT,aAAa,CAACU,mBAAd,CAAkCC,SAAlC,CAA4CP,mBAA5C,CADF;AAGA,QAAMQ,iBAAiB,GAAG,CACxB;AACEC,IAAAA,KAAK,EACH,sEAFJ;AAGEC,IAAAA,WAAW,EACT,2gBAJJ;AAKEC,IAAAA,MAAM,EAAEC,OAAO,CAAC,iCAAD;AALjB,GADwB,EAQxB;AACEH,IAAAA,KAAK,EAAE,+CADT;AAEEC,IAAAA,WAAW,EACT,0YAHJ;AAIEC,IAAAA,MAAM,EAAEC,OAAO,CAAC,yCAAD;AAJjB,GARwB,CAA1B;;AAgBA,QAAMC,cAAc,GAAG,MAAM;AAC3B,WAAOL,iBAAiB,CAACM,GAAlB,CAAsB,CAACC,KAAD,EAAQC,CAAR,kBAC3B;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAA,oBAAOD,KAAK,CAACN;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,GAAG,EAAEM,KAAK,CAACJ,MADb;AAEE,UAAA,GAAG,EAAC,UAFN;AAGE,UAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAoCK,CAApC;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAA,oBAAOD,KAAK,CAACL;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAYE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAgBD,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAqD,IAAA,EAAE,EAAEX,KAAK,CAACI,EAAN,IAAY,EAArE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAE,UAAtB;AAAkC,QAAA,UAAU,EAAE;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,EAEGU,cAAc,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;KApDuBf,Q","sourcesContent":["import React, { useEffect } from \"react\";\nimport ScreenHeading from \"../../utilities/ScreenHeading/ScreenHeading\";\nimport ScrollService from \"../../utilities/ScrollService\";\nimport Animations from \"../../utilities/Animations\";\nimport \"./Research.css\";\n\nexport default function Research(props) {\n  let fadeInScreenHandler = (screen) => {\n    if (screen.fadeScreen !== props.id) return;\n    Animations.animations.fadeScreen(props.id);\n  };\n\n  const fadeInSubscription =\n    ScrollService.currentScreenFadeIn.subscribe(fadeInScreenHandler);\n\n  const SCREEN_CONSTSANTS = [\n    {\n      title:\n        \"Federated Learning on Non-iid Features via Local Batch Normalization\",\n      description:\n        \"Most of the previous federated learning work has focused on a difference in the distribution of labels. Unlike those settings, we address an important problem of FL, e.g., different scanner/sensors in medical imaging, where local clients may store examples with different marginal or conditional feature distributions compared to other nodes, which we denote as feature shift non-iid. In this work, we propose an effective method that uses local batch normalization to alleviate the feature shift before averaging models.\",\n      imgurl: require(\"../../assets/Research/fedbn.png\"),\n    },\n    {\n      title: \"Transfer Pruning for Inversion Attack Defense\",\n      description:\n        \"We propose to prune a target neural network with a public datasetand transfers it to the distributed learning setting to collaboratively train the pruned network with distributed private datasets via sharing a hidden layer of representations, without sharing the data. Our experiments show that the proposed approach achieves a much better trade-off between accuracy and privacy preservation.\",\n      imgurl: require(\"../../assets/Research/tranfer_prune.png\"),\n    },\n  ];\n\n  const renderProjects = () => {\n    return SCREEN_CONSTSANTS.map((value, i) => (\n      <div className=\"research-projects\">\n        <div className=\"project-title\" key={i}>\n          <span>{value.title}</span>\n          <img\n            src={value.imgurl}\n            alt=\"No Image\"\n            className=\"project-image\"\n          ></img>\n        </div>\n        <div className=\"project-details\">\n          <span>{value.description}</span>\n        </div>\n        <div className=\"bottom-bar\"></div>\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"research-container screen-container\" id={props.id || \"\"}>\n      <div className=\"research-parent\">\n        <ScreenHeading title={\"Research\"} subHeading={\"\"} />\n        {renderProjects()}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}